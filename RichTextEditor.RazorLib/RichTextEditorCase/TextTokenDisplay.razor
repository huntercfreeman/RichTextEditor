@using ClassLib.Store.RichTextEditorCase
@using RichTextEditor.ClassLib.Html

<span class="rte_rich-text-editor-text-token-display">
    @switch (TextToken.Kind)
    {
        case TextTokenKind.StartOfRow:
            <CharacterRenderer Character="@string.Empty"
                               ShouldDisplayCursor="TextToken.IndexInPlainText is not null" />
            break;
        case TextTokenKind.Default:
            <text>
                @{
                    for (int i = 0; i < TextToken.PlainText.Length; i++)
                    {
                        var index = i;

                        <CharacterRenderer Character="@TextToken.PlainText[index].ToString()"
                                           ShouldDisplayCursor="(TextToken.IndexInPlainText ?? -1) == index" />
                    }
                }
            </text>
            break;
        case TextTokenKind.Whitespace:
            <CharacterRenderer Character="@TextToken.PlainText.EscapeHtml()"
                               ShouldDisplayCursor="TextToken.IndexInPlainText is not null" />
            break;
    }
</span>