@using Fluxor.Blazor.Web.Components

@inherits FluxorComponent

@if (RichTextEditorSelector.Value is null)
{
    <div>RichTextEditorSelector.Value is null</div>
}
else
{
    <div id="@RichTextEditorDisplayId"
         class="rte_rich-text-editor-display @IsFocusedCssClass"
         @onclick="FocusInputFocusTrapOnClick">

        <input @ref="_inputFocusTrap"
            @onkeydown:preventDefault="true"
            @onkeydown="OnKeyDown"
            @onfocusin="OnFocusIn"
            @onfocusout="OnFocusOut"
            id="@InputFocusTrapId"
            class="rte_visually-hidden rte_unselectable rte_focus-trap"
            style="position: absolute; @InputFocusTrapTopStyleCss" />
        
        <CascadingValue Value="RichTextEditorKey">
            <CascadingValue Value="_isFocused">
                <CascadingValue Name="CurrentRowIndex" Value="RichTextEditorSelector.Value.CurrentRowIndex">
                    <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                        @{
                            var mostDigitsInARowNumber = RichTextEditorSelector.Value.Array.Length.ToString().Length;

                            // Ensure reference to RichTextEditorSelector does
                            // not change while looping over rows
                            // by making a local reference to it.
                            var currentRichTextEditorSelector = RichTextEditorSelector.Value;

                            for (int i = 0; i < currentRichTextEditorSelector.Array.Length; i++)
                            {
                                var rowIndex = i;

                                var rowKey = currentRichTextEditorSelector.Array[rowIndex];
                                var rowValue = currentRichTextEditorSelector.Map[rowKey];

                                <CascadingValue Name="RowIndex" Value="rowIndex">
                                    <RichTextEditorRowDisplay @key="rowKey"
                                                            RichTextEditorRow="rowValue"
                                                            MostDigitsInARowNumber="mostDigitsInARowNumber" />
                                </CascadingValue>
                            }
                        }
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </CascadingValue>
    </div>
}
