@using Fluxor.Blazor.Web.Components

@inherits FluxorComponent

@if (RichTextEditorSelector.Value is null)
{
    <div>RichTextEditorSelector.Value is null</div>
}
else
{
    <div id="@RichTextEditorDisplayId"
         class="rte_rich-text-editor-display @IsFocusedCssClass"
         @onclick="FocusInputFocusTrapOnClick">

        <input @ref="_inputFocusTrap"
            @onkeydown:preventDefault="true"
            @onkeydown="OnKeyDown"
            @onfocusin="OnFocusIn"
            @onfocusout="OnFocusOut"
            id="@InputFocusTrapId"
            class="rte_visually-hidden rte_unselectable rte_focus-trap"
            style="position: absolute; @InputFocusTrapTopStyleCss" />
        
        <CascadingValue Value="_isFocused">
            <CascadingValue Name="CurrentRowIndex" Value="RichTextEditorSelector.Value.CurrentRowIndex">
                <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                    @{
                        var mostDigitsInARowNumber = RichTextEditorSelector.Value.Array.Length.ToString().Length;
                        var rowKeys = RichTextEditorSelector.Value.Array;

                        for (int i = 0; i < rowKeys.Length; i++)
                        {
                            var index = i;
                            var rowKey = rowKeys[index];
                            
                            <RichTextEditorRowDisplay @key="rowKey"
                                                    RichTextEditorRow="RichTextEditorSelector.Value.Map[rowKey]"
                                                    Index="index"
                                                    MostDigitsInARowNumber="mostDigitsInARowNumber" />
                        }
                    }
                </CascadingValue>
            </CascadingValue>
        </CascadingValue>
    </div>
}
